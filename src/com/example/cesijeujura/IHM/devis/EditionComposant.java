package com.example.cesijeujura.IHM.devis;

import java.util.List;

import com.example.cesijeujura.Entities.Client;
import com.example.cesijeujura.Entities.Composant;
import com.example.cesijeujura.Entities.Quantite_Composant_Module;
import com.example.cesijeujura.IEJB.ComposantIEJB;
import com.example.cesijeujura.IEJB.DevisIEJB;
import com.example.cesijeujura.IEJB.ModuleIEJB;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.data.Item;
import com.vaadin.ui.Button;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.declarative.Design;

/** 
 * !! DO NOT EDIT THIS FILE !!
 * 
 * This class is generated by Vaadin Designer and will be overwritten.
 * 
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { … }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class EditionComposant extends VerticalLayout {
	protected Label lblTitle;
	protected HorizontalLayout composantsLayout;
	protected Table composantTable;
	protected VerticalLayout buttonLayout;
	protected Button addButton;
	protected Button deleteButton;
	//protected ComboBox composantCombo;
	protected HorizontalLayout closeLayout;
	protected Button closeButton;



	public EditionComposant(DevisIEJB devisEJB, ComposantIEJB composantEJB, ModuleIEJB moduleEJB) {

		Design.read(this);
		addButton.setEnabled(true);
		addButton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				PopupAjoutComposant popup = new PopupAjoutComposant(moduleEJB.findAllModule().get(0), moduleEJB);
				getUI().addWindow(popup);
				popup.setVisible(true);	
				//	Notification.show("Ajouter Composant",
				//			Type.TRAY_NOTIFICATION);
			}
		});

		deleteButton.setEnabled(true);
		deleteButton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				Notification.show("Supprimer un Composant",
				Type.TRAY_NOTIFICATION);
				Composant c = (Composant) composantTable.getValue();				
			//	System.out.println(idTable);
			//	System.out.println("test de william");
				Quantite_Composant_Module quantitecomposant = new Quantite_Composant_Module();
				quantitecomposant.setComposant(c);
				moduleEJB.findAllModule().get(0).getComposants().remove(quantitecomposant);
				moduleEJB.update(moduleEJB.findAllModule().get(0));		

			}
		});


		List<Composant> composant = composantEJB.findAllComposant();
		composantTable.setSizeFull();
		composantTable.setSelectable(true);

		composantTable.addContainerProperty("Composant", String.class, "");
		composantTable.addContainerProperty("Nombre", Integer.class, Integer.MIN_VALUE);

		for (Quantite_Composant_Module c : moduleEJB.findAllModule().get(0).getComposants()) {
			Object newItemId = composantTable.addItem();
			Item row1 = composantTable.getItem(newItemId);
			row1.getItemProperty("Composant").setValue(c.getComposant().getNom());
			row1.getItemProperty("Nombre").setValue(c.getNb());
		}



	}


}


