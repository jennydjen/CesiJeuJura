package com.example.cesijeujura.IHM.devis;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.example.cesijeujura.CesijeujuraUI;
import com.example.cesijeujura.Entities.Client;
import com.example.cesijeujura.Entities.Devis;
import com.example.cesijeujura.Entities.Etat;
import com.example.cesijeujura.IEJB.ClientIEJB;
import com.example.cesijeujura.IEJB.DevisIEJB;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.data.Item;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Table;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.declarative.Design;

/**
 * !! DO NOT EDIT THIS FILE !!
 * 
 * This class is generated by Vaadin Designer and will be overwritten.
 * 
 * Please make a subclass with logic and additional interfaces as needed, e.g
 * class LoginView extends LoginDesign implements View { … }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class ListeDevis extends VerticalLayout {
	protected Label titleLabel;
	protected HorizontalLayout layout;
	protected VerticalLayout searchLayout;
	protected Label searchAdvanceLabel;
	protected GridLayout searchAdvanceLayout;
	protected Label clientLabel;
	protected ComboBox clientCombo;
	protected Label etatLabel;
	protected ComboBox etatCombo;
	protected Button createButton;
	protected HorizontalLayout devisLayout;
	protected Table devisTable;
	protected VerticalLayout buttonLayout;
	protected Button openButton;
	protected Button modifButton;
	protected Button validateButton;
	protected Button deleteButton;
	private Map<Integer, Devis> mapsDevis;

	private DevisIEJB devisEJB;

	public ListeDevis(DevisIEJB devisEJB, final ClientIEJB clientEJB) {
		Design.read(this);

		this.devisEJB = devisEJB;
		createButton.setVisible(false);

		openButton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				Devis d = mapsDevis.get((Integer) devisTable.getValue());

				CesijeujuraUI.getInstanceMenuView().afficherFicheDevis(
						d.getId());
			}
		});

		modifButton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				Devis devis = mapsDevis.get((Integer) devisTable.getValue());
				CesijeujuraUI.getInstanceMenuView().afficherEditionProjet(
						devis.getId());
			}
		});

		validateButton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				Devis devis = mapsDevis.get((Integer) devisTable.getValue());
				devis.setEtat(Etat.DEVIS);				
				devisEJB.update(devis);
				
				initialiseDevis();
				
				Notification.show("Le devis vient d'être accepté par le client", Type.TRAY_NOTIFICATION);
			}
		});

		deleteButton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				Notification.show("The button delete was clicked",
						Type.TRAY_NOTIFICATION);
			}
		});

		// Initialisation de la comboBox des états.
		etatCombo.removeAllItems();
		for (Etat e : Etat.values()) {
			etatCombo.addItem(e);
		}
		etatCombo.setValue(Etat.VALIDATION_BUREAU);

		etatCombo.addValueChangeListener(new ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {
				initialiseDevis();
			}
		});
		etatCombo.setWidth(220, Unit.PIXELS);

		// Initialisation de la comboBox des clients
		List<Client> clients = clientEJB.findAllClient();
		clientCombo.removeAllItems();
		if (clients.size() > 0) {
			for (Client c : clients) {
				clientCombo.addItem(c);
			}
		}

		clientCombo.addValueChangeListener(new ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {
				initialiseDevis();
			}
		});

		// Initialisation de la table avec les devis
		devisTable.setSizeFull();
		devisTable.setSelectable(true);

		devisTable.addContainerProperty("Ref", String.class, "");
		devisTable.addContainerProperty("Client", Client.class, "");
		devisTable.addContainerProperty("Etat", String.class, "");
		devisTable.addContainerProperty("Date", Date.class, null);

		initialiseDevis();

		openButton.setEnabled(false);
		modifButton.setEnabled(false);
		validateButton.setEnabled(false);
		deleteButton.setEnabled(false);

		devisTable.addValueChangeListener(new ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {
				if (devisTable.getValue() != null) {
					Devis d = mapsDevis.get((Integer) devisTable.getValue());

					openButton.setEnabled(true);
					if (d.getEtat() == Etat.CREER) {
						modifButton.setEnabled(true);
					}
					if (d.getEtat() == Etat.VALIDATION_BUREAU) {
						validateButton.setEnabled(true);
					}
					deleteButton.setEnabled(true);
				} else {
					openButton.setEnabled(false);
					modifButton.setEnabled(false);
					validateButton.setEnabled(false);
					deleteButton.setEnabled(false);
				}
			}
		});
	}

	private void initialiseDevis() {
		Etat etat = (Etat) etatCombo.getValue();
		Client client = (Client) clientCombo.getValue();

		List<Devis> devis = devisEJB.findDevisByFiltre(client, etat);

		devisTable.removeAllItems();

		mapsDevis = new HashMap<Integer, Devis>();
		int i = 1;
		for (Devis d : devis) {
			mapsDevis.put(i, d);
			Object newItemId = devisTable.addItem(i);
			Item row1 = devisTable.getItem(i);
			row1.getItemProperty("Ref").setValue(d.getRef());
			row1.getItemProperty("Client").setValue(d.getProjet().getClient());
			row1.getItemProperty("Etat").setValue(d.getEtat().toString());
			row1.getItemProperty("Date").setValue(d.getDateCreation());
			i++;
		}
	}
}
