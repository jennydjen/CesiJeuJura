package com.example.cesijeujura.IHM.devis;

import java.awt.event.ActionEvent;
import java.io.File;
import java.util.List;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.example.cesijeujura.CesijeujuraUI;
import com.example.cesijeujura.EJB.FichierEJB;
import com.example.cesijeujura.EJB.ModuleEJB;
import com.example.cesijeujura.Entities.Devis;
import com.example.cesijeujura.Entities.Fichier;
import com.example.cesijeujura.Entities.Module;
import com.example.cesijeujura.IEJB.DevisIEJB;
import com.example.cesijeujura.IEJB.FichierIEJB;
import com.example.cesijeujura.IEJB.ModuleIEJB;
import com.example.cesijeujura.IHM.popup.ChooseFile;
import com.example.cesijeujura.devis.PopupSave;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.data.Item;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.PopupView;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Upload;
import com.vaadin.ui.Upload.Receiver;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.declarative.Design;

/** 
 * !! DO NOT EDIT THIS FILE !!
 * 
 * This class is generated by Vaadin Designer and will be overwritten.
 * 
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { … }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class TraitementDevisView extends VerticalLayout {
	protected HorizontalLayout referenceHLayout;
	protected HorizontalLayout devisLblLayout;
	protected Label referenceDevisLabel;
	protected TextField referenceDevisTF;
	protected HorizontalLayout clientHLayout;
	protected Label referenceClientLabel;
	protected TextField referenceClientTF;
	protected TabSheet traitementSheet;
	protected HorizontalLayout filesHLayout;
	protected Table filesTable;
	protected VerticalLayout buttonLayout;
	protected Button addButton;
	protected Button deleteButton;
	protected HorizontalLayout chiffrageHLayout;
	protected Table modulesTable;
	protected Button editerCompButton;
	protected GridLayout buttonsGLayout;
	protected Button traiterButton;
	protected Button saveButton;
	protected Button quitButton;
	
	//final JFileChooser fc = new JFileChooser();

	public TraitementDevisView(ModuleIEJB moduleEJB,final FichierIEJB fichiersIEJB,final DevisIEJB devisIEJB,final int id) {
		Design.read(this);
		// BOUTON AJOUTER LIGNE CHIFFRAGE
		editerCompButton.addClickListener(new ClickListener() {

			@Override
			public void buttonClick(ClickEvent e) {

			}
		});
		
		
		//UploadBox uploadbox = new UploadBox();
		//addButton.addComponent(uploadbox);
//		layout.addComponent(new Upload("CV", new Upload.Receiver() {
//
//            public OutputStream receiveUpload(String filename, String MIMEType) {
//                return null;
//            }
//        }));
		
		
		//ImageUploader receiver = new ImageUploader();
		// Create the upload with a caption and set receiver later
		// addButton = new Upload("Upload Image Here", receiver);
		// addButton.setButtonCaption("Start Upload");
		// addButton.addSucceededListener(receiver);
		// BOUTON AJOUTER LIGNE IMPORTATION
		addButton.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event){
				//filesTable.removeAllItems();
				//filesTable.setSizeFull();
				//filesTable.setSelectable(true);
				
				//filesTable.addContainerProperty("Nom", String.class, "");
				//filesTable.addContainerProperty("Chaine", String.class, "");
				
				//Object newItemAddID = filesTable.addItem();
				//Item rowadd = filesTable.getItem(newItemAddID);
				
				Devis devis = devisIEJB.find(id);
				ChooseFile choose = new ChooseFile(devis,fichiersIEJB);
			    getUI().addWindow(choose);
			    choose.setVisible(true);
			    
			    
			    filesTable.refreshRowCache();
				filesTable.validate();

				//JOptionPane jop = new JOptionPane();//jop2 = new JOptionPane();
			    //String nom = jop.showInputDialog(null, "Veuillez décliner votre identité !", "Gendarmerie nationale !", JOptionPane.QUESTION_MESSAGE);
			    //jop2.showMessageDialog(null, "Votre nom est " + nom, "Identité", JOptionPane.INFORMATION_MESSAGE);
				//rowadd.getItemProperty("Nom").setValue(upload.getId());
				//rowadd.getItemProperty("Chaine").setValue(upload.getDescription());
				
				
				//rowadd.getItemProperty("Nom").setValue("coucou");
				//rowadd.getItemProperty("Chaine").setValue("test");
			}
	    });
		
		
		
		// BOUTON SUPPRIMER LIGNE IMPORTATION
		deleteButton.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				
				//Devis d = mapsDevis.get((Integer) devisTable.getValue());
				//CesijeujuraUI.getInstanceMenuView().afficherFicheDevis(d.getId());
				
				filesTable.removeItem(filesTable.getValue());
				filesTable.refreshRowCache();
				filesTable.validate();
				
				//if (filesTable.getTabIndex() != -1) {
		            // remove selected row from the model
					//filesTable.removeItem(filesTable.getTabIndex());
		        //} 
					//filesTable.removeItem(itemId);	
			}
	    });
		
		saveButton.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				
				 PopupSave popup = new PopupSave();
				 getUI().addWindow(popup);
				 popup.setVisible(true);				
			}
	    });
		
		
		traiterButton.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				
				
			}
		});
		// LISTE TABLE CHIFFRAGE
		List<Module> module = moduleEJB.findAllModule();
		modulesTable.removeAllItems();
		modulesTable.setSizeFull();
		modulesTable.setSelectable(true);
		
		modulesTable.addContainerProperty("Nom des modules", String.class, "");
		modulesTable.addContainerProperty("Nombre de Composants associés", String.class, "");
		modulesTable.addContainerProperty("Prix estimé(€)", String.class, "");
		
		for (Module m : module){
			Object newItemID = modulesTable.addItem();
			Item row1 = modulesTable.getItem(newItemID);
			row1.getItemProperty("Nom des modules").setValue(m.getNom());
			row1.getItemProperty("Nombre de Composants associés").setValue(m.getComposants().size()+"");
			row1.getItemProperty("Prix estimé(€)").setValue(m.getPrixModule().toString());
		}	
		
		// LISTE TABLE IMPORT
		List<Fichier> fichiers = fichiersIEJB.findAllFichiers();
		filesTable.removeAllItems();
		filesTable.setSizeFull();
		filesTable.setSelectable(true);
		
		filesTable.addContainerProperty("Nom", String.class, "");
		filesTable.addContainerProperty("Chaine", String.class, "");
		
		for (Fichier f : fichiers){
			Object newItemAddID = filesTable.addItem();
			Item rowadd = filesTable.getItem(newItemAddID);
			rowadd.getItemProperty("Nom").setValue(f.getId()+"");
			rowadd.getItemProperty("Chaine").setValue(f.getPath());
		}	
	}
	
}





