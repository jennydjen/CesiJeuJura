package com.example.cesijeujura.IHM.client;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import com.example.cesijeujura.CesijeujuraUI;
import com.example.cesijeujura.Entities.Client;
import com.example.cesijeujura.Entities.Devis;
import com.example.cesijeujura.Entities.Etat;
import com.example.cesijeujura.Entities.Projet;
import com.example.cesijeujura.IEJB.DevisIEJB;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.data.Item;
import com.vaadin.data.Property.ValueChangeEvent;
import com.vaadin.data.Property.ValueChangeListener;
import com.vaadin.ui.Button;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Panel;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.declarative.Design;

/** 
 * !! DO NOT EDIT THIS FILE !!
 * 
 * This class is generated by Vaadin Designer and will be overwritten.
 * 
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { … }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class FicheClient extends VerticalLayout {
	protected Label titleLabel;
	protected Panel identityPanel;
	protected VerticalLayout identiteLayout;
	protected HorizontalLayout nameLayout;
	protected ComboBox civiliteCombo;
	protected TextField nameField;
	protected TextField firstNameField;
	protected TextField referenceField;
	protected HorizontalLayout adresseLayout;
	protected TextField adresseField;
	protected TextField codePostalField;
	protected TextField villeField;
	protected HorizontalLayout contactLayout;
	protected TextField mailField;
	protected TextField phoneField;
	protected Table projectTable;
	protected HorizontalLayout buttonLayout;
	protected Button seeDevisButton;
	private Map<Integer, Projet> mapsProjets;

	public FicheClient(DevisIEJB devisEJB, Client client) {
		Design.read(this);

		seeDevisButton.setEnabled(false);
		seeDevisButton.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				Projet p = mapsProjets.get((Integer) projectTable.getValue());
				
				CesijeujuraUI.getInstanceMenuView().afficherFicheDevis(p.getDevis().get(p.getDevis().size()-1).getId());
				
				Notification.show("Afficher Fiche devis",
						Type.TRAY_NOTIFICATION);
			}
		});
		
		titleLabel.setValue("Fiche Client");
		
		nameField.setValue(client.getNom());
		firstNameField.setValue(client.getPrenom());
		referenceField.setValue(client.getRef());
		adresseField.setValue(client.getAdresse());
		codePostalField.setValue(client.getCp());
		villeField.setValue(client.getVille());
		mailField.setValue(client.getMail());
		phoneField.setValue(client.getTel());

		civiliteCombo.removeAllItems();
		civiliteCombo.addItem("M");
		civiliteCombo.addItem("Mme");
		civiliteCombo.addItem("Mlle");
		switch (client.getCivilite()) {
			case 1:
				civiliteCombo.setValue("M");
				break;
			case 2:
				civiliteCombo.setValue("Mme");
				break;
			case 3:
				civiliteCombo.setValue("Mlle");
				break;
		}
		
		projectTable.setSizeFull();
		projectTable.setSelectable(true);

		projectTable.addContainerProperty("Nom projet", String.class, "");
		projectTable.addContainerProperty("Ref projet", String.class, "");
		projectTable.addContainerProperty("Surface", Double.class, "");
		projectTable.addContainerProperty("Etat de la commande", Etat.class, Etat.A_TRAITER);
		projectTable.addContainerProperty("Prix", Double.class, 0.0);
		
		mapsProjets = new HashMap<Integer, Projet>();
		int i = 1;
		for(Projet p : client.getProjets()){
			mapsProjets.put(i, p);
			Devis devis = null;
			Date dateMax = null;
			for(Devis d: p.getDevis()){
				if(dateMax == null || dateMax.before(d.getDateCreation())){
					dateMax = d.getDateCreation();
					devis = d;
				}
			}
			
			Object newItemId = projectTable.addItem();
			Item row1 = projectTable.getItem(newItemId);
			row1.getItemProperty("Nom projet").setValue(p.getNom());
			row1.getItemProperty("Ref projet").setValue(p.getRef());
			row1.getItemProperty("Surface").setValue(p.getSurface());
			row1.getItemProperty("Etat de la commande").setValue(devis.getEtat());
			row1.getItemProperty("Prix").setValue(devis.getPrix());
			i++;
		}	
		projectTable.addValueChangeListener(new ValueChangeListener() {

			@Override
			public void valueChange(ValueChangeEvent event) {
				if (projectTable.getValue() != null) {
					seeDevisButton.setEnabled(true);
				}else{
					seeDevisButton.setEnabled(false);
				}
			}
		});
		
		projectTable.setHeight(200, Unit.PIXELS);
	}
}
