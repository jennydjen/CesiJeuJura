package com.example.cesijeujura.IHM.devis;

import java.util.List;

import com.example.cesijeujura.EJB.ModuleEJB;
import com.example.cesijeujura.Entities.Module;
import com.example.cesijeujura.IEJB.ModuleIEJB;
import com.example.cesijeujura.devis.PopupSave;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.annotations.DesignRoot;
import com.vaadin.data.Item;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.PopupView;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.Table;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import com.vaadin.ui.declarative.Design;

/** 
 * !! DO NOT EDIT THIS FILE !!
 * 
 * This class is generated by Vaadin Designer and will be overwritten.
 * 
 * Please make a subclass with logic and additional interfaces as needed,
 * e.g class LoginView extends LoginDesign implements View { … }
 */
@DesignRoot
@AutoGenerated
@SuppressWarnings("serial")
public class TraitementDevisView extends VerticalLayout {
	protected HorizontalLayout referenceHLayout;
	protected HorizontalLayout devisLblLayout;
	protected Label referenceDevisLabel;
	protected TextField referenceDevisTF;
	protected HorizontalLayout clientHLayout;
	protected Label referenceClientLabel;
	protected TextField referenceClientTF;
	protected TabSheet traitementSheet;
	protected HorizontalLayout filesHLayout;
	protected Table filesTable;
	protected VerticalLayout buttonLayout;
	protected Button addButton;
	protected Button deleteButton;
	protected HorizontalLayout chiffrageHLayout;
	protected Table modulesTable;
	protected Button editerCompButton;
	protected GridLayout buttonsGLayout;
	protected Button traiterButton;
	protected Button saveButton;
	protected Button quitButton;

	public TraitementDevisView(ModuleIEJB moduleEJB) {
		Design.read(this);
		// BOUTON AJOUTER LIGNE IMPORTATION
		editerCompButton.addClickListener(new ClickListener() {
					
			@Override
			public void buttonClick(ClickEvent event) {
				//ModuleIEJB moduleEJB = new ModuleEJB();
				
				List<Module> module = moduleEJB.findAllModule();
				modulesTable.removeAllItems();
				modulesTable.setSizeFull();
				modulesTable.setSelectable(true);
				
				modulesTable.addContainerProperty("Nom des modules", String.class, "");
				modulesTable.addContainerProperty("Nombre de Composants associés", String.class, "");
				modulesTable.addContainerProperty("Prix estimé(€)", String.class, "");
				
				for (Module m : module){
					Object newItemID = modulesTable.addItem();
					Item row1 = modulesTable.getItem(newItemID);
					row1.getItemProperty("Nom des modules").setValue(m.getNom());
					row1.getItemProperty("Nombre de Composants associés").setValue(m.getComposants().size()+"");
					row1.getItemProperty("Prix estimé(€)").setValue(m.getPrixModule().toString());
				}
				
				
			}
		});
		
		// BOUTON AJOUTER LIGNE IMPORTATION
		addButton.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				filesTable.setSizeFull();
				filesTable.setSelectable(true);
				
				filesTable.addContainerProperty("Nom", String.class, "");
				filesTable.addContainerProperty("Chaine", String.class, "");
				
				Object newItemAddID = filesTable.addItem();
				Item rowadd = filesTable.getItem(newItemAddID);
				rowadd.getItemProperty("Nom des modules").setValue("coucou");
				rowadd.getItemProperty("Nombre de Composants associés").setValue("test");
			}
	    });
		// BOUTON SUPPRIMER LIGNE IMPORTATION
		addButton.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				filesTable.removeAllItems();	
			}
	    });
		
		saveButton.addClickListener(new ClickListener() {
			@Override
			public void buttonClick(ClickEvent event) {
				
				 PopupSave popup = new PopupSave();
				 getUI().addWindow(popup);
				 popup.setVisible(true);				
			}
	    });
		
		
		traiterButton.addClickListener(new ClickListener() {
			
			@Override
			public void buttonClick(ClickEvent event) {
				
				
			}
		});
	}
	
}


